import logging
import os
from random import randint

from aiogram import Bot, Dispatcher, executor, types
from menu import *

bot_token = os.getenv('bot_token')
API_TOKEN = bot_token

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    await message.reply(f"üëã–î–æ–±—Ä—ã–π –¥–µ–Ω—å, {message.from_user.first_name}\n"
                        f"–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–µ–ª–µ–≥—Ä–∞–º–º-–∫–∞–Ω–∞–ª –≥—Ä—É–∑–æ–ø–µ—Ä–µ–≤–æ–∑–æ–∫ –ø–æ –†–æ—Å—Å–∏–∏, –ê–∑–∏–∏ –∏ –ï–≤—Ä–æ–ø–µ\n"
                        f"–ù–∞ –¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤—ã –º–æ–∂–µ—Ç–µ:\n"
                        f"üïñ–†–∞—Å—á–∏—Ç–∞—Ç—å –∏ –∑–∞–∫–∞–∑–∞—Ç—å –ø–µ—Ä–µ–≤–æ–∑–∫—É\n"
                        f"üî•–£–∑–Ω–∞—Ç—å –æ—Ç–≤–µ—Ç—ã –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –≤–∞—Å –≤–æ–ø—Ä–æ—Å—ã",
                        reply_markup=main_menu_kb)

@dp.message_handler(text=['–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –ø–µ—Ä–µ–≤–æ–∑–∫—É'])
async def calc_trans(message: types.Message):
    await bot.send_message(message.from_user.id, f"test")


@dp.message_handler(text=['FAQ - –í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã'])
async def call_faq(message: types.Message):
    await bot.send_message(message.from_user.id, f"1Ô∏è‚É£‚ùì –°–∫–æ–ª—å–∫–æ –∏–¥–µ—Ç –º–æ—è –ø–æ—Å—ã–ª–∫–∞?\n"
                                                 f"–í–∞—à–∞ –ø–æ—Å—ã–ª–∫–∞ –±—É–¥–µ—Ç –æ—Ç 3 –¥–Ω–µ–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∞—à–µ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞\n\n"
                                                 f"2Ô∏è‚É£‚ùì –ú–æ–≥—É —è –æ–ø–ª–∞—Ç–∏—Ç—å –Ω–∞–ª–æ–∂–µ–Ω–Ω—ã–º –ø–ª–∞—Ç–µ–∂–µ–º?\n"
                                                 f"–î–∞, –º–æ–∂–µ—Ç–µ\n\n"
                                                 f"3Ô∏è‚É£‚ùì –ú–æ–≥—É –ª–∏ —è –∑–∞—Å—Ç—Ä–∞—Ö–æ–≤–∞—Ç—å –ø–æ—Å—ã–ª–∫—É?\n"
                                                 f"–î–∞, –º–æ–∂–µ—Ç–µ, —Å—Ç–æ–∏–æ—Å—Ç—å —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è –æ—Ç 150—Ä\n\n"
                                                 f"4Ô∏è‚É£‚ùì –ï—Å—Ç—å –ª–∏ —É –≤–∞—Å —ç–∫—Å–ø—Ä–µ—Å—Å –¥–æ—Å—Ç–∞–≤–∫–∞?\n"
                                                 f"–î–∞, –µ—Å—Ç—å –æ—Ç 1 –¥–æ 3 –¥–Ω–µ–π\n\n"
                                                 f"üÜò–ë–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ –ì—Ä—É–∑–∏–∫–∏.–†–§üÜò",reply_markup=call_support)

@dp.callback_query_handler(lambda c: c.data == 'call_support')
async def process_callback_button1(callback_query: types.CallbackQuery):
    await bot.send_message(-714795919, "–û–±—Ä–∞—â–µ–Ω–∏–µ ‚Ññ")
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, '–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É')


@dp.message_handler(text="–ê–¥—Ä–µ—Å–∞ –∏ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã")
async def working_mode(message: types.Message):
    await bot.send_message(message.from_user.id, 'üìç–ö–æ–º–ø–∞–Ω–∏—è: –ì—Ä—É–∑–∏–∫–∏.–†–§\n'
                                                 '–£–ª–∏—Ü–∞ –õ–µ–Ω–∏–Ω–∞, –¥–æ–º 16\n'
                                                 '–ë—É–¥–Ω–∏–µ –¥–Ω–∏: —Å 8:00 –¥–æ 19:00\n'
                                                 '–í—ã—Ö–æ–¥–Ω—ã–µ –¥–Ω–∏: —Å 9:00 –¥–æ 13:00\n\n'
                                                 'üìç–ö–æ–º–ø–∞–Ω–∏—è: –ì—Ä—É–∑–∏–∫–∏.–†–§\n'
                                                 '–£–ª–∏—Ü–∞ –ö—É—Ç—É–∑–æ–≤—Å–∫–∞—è, –¥–æ–º 55\n'
                                                 '–ë—É–¥–Ω–∏–µ –¥–Ω–∏: —Å 8:00 –¥–æ 19:00\n'
                                                 '–í—ã—Ö–æ–¥–Ω—ã–µ –¥–Ω–∏: —Å 10:00 –¥–æ 15:00\n\n'
                                                 'üìç–ö–æ–º–ø–∞–Ω–∏—è: –ì—Ä—É–∑–∏–∫–∏.–†–§\n'
                                                 '–£–ª–∏—Ü–∞ –ê—Ä–±–∞—Ç—Å–∫–∞—è, –¥–æ–º 8\n'
                                                 '–ë—É–¥–Ω–∏–µ –¥–Ω–∏: —Å 7:00 –¥–æ 19:00\n'
                                                 '–í—ã—Ö–æ–¥–Ω—ã–µ –¥–Ω–∏: —Å 8:00 –¥–æ 15:00')


def register_handlers_client(dp: Dispatcher):
    dp.register_message_handler(calc_trans, commands=['–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –ø–µ—Ä–µ–≤–æ–∑–∫—É'])
    dp.register_message_handler(working_mode, commands=['–ê–¥—Ä–µ—Å–∞ –∏ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã'])
    dp.register_message_handler(call_faq, commands=['FAQ - –í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã'])

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)